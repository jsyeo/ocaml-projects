Loading sPL program ..
  let {int->int->int} f =  (fun {int->int->int} x       -> fun {int->int} y -> x+y end end)in {int->int} f 4 end
  as let {Int->Int->Int} f = fun {Int->Int->Int} x -> fun {Int->Int} y -> +[Var(x),Var(y)] end end in {Int->Int}Appln[Var(f); Int(4)] end
TYPE CHECKING program ..
 ==> inferred type Int->Int
TRANSFORMING ==> Appln[fun {(Int->Int->Int)->Int->Int} f -> fun {Int->Int} _pa_var_0 -> Appln[Var(f); Int(4);Var(_pa_var_0)] end end; fun {Int->Int->Int} x -> fun {Int->Int} y -> +[Var(x),Var(y)] end end]
COMPILING ==> sp17c.svm
[LDF([],1,label_2),LDF([],1,label_0),CALL 1,DONE,
label_0:,LDF([(f,0)],1,label_1),RTN,
label_1:,LD (_pa_var_0,1),LDCI 4,LD (f,0),CALL 2,RTN,
label_2:,LDF([(x,0)],1,label_3),RTN,
label_3:,LD (x,0),LD (y,1),PLUS,RTN]
LINKING ==> 
[LDF([],1,11),LDF([],1,4),CALL 1,DONE,
4:,LDF([(f,0)],1,6),RTN,
6:,LD (_pa_var_0,1),LDCI 4,LD (f,0),CALL 2,RTN,
11:,LDF([(x,0)],1,13),RTN,
13:,LD (x,0),LD (y,1),PLUS,RTN]
Loading sVM code from ..sp17c.svm
Loaded [LDF([],1,11),LDF([],1,4),CALL 1,DONE,LDF([(f,0)],1,6),RTN,LD (_pa_var_0,1),LDCI 4,LD (f,0),CALL 2,RTN,LDF([(x,0)],1,13),RTN,LD (x,0),LD (y,1),PLUS,RTN]
Executing ==> CLOSURE
